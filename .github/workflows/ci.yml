name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GOLANG_VERSION: 1.17

jobs:
  build_docker:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Do Local Test Build
        uses: docker/build-push-action@v3.2.0
        with:
          load: true
          tags: dbhi/prometheus-sql:test
          context: .

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" -f "docker-compose.test.yml" up -d
        working-directory: ./examples/working_example

      - name: Wait and Test Metrics Endpoint
        run: sleep 30 && curl http://localhost:8080/metrics

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" -f "docker-compose.test.yml" down
        working-directory: ./examples/working_example

  build_pkgs:
    name: Build Packages
    needs: build_docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64]

    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^${{ env.GOLANG_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Verify go modules
        run: go mod verify

      - name: Check formatting
        run: |
          chmod +x $GITHUB_WORKSPACE/scripts/gofmtcheck.sh
          $GITHUB_WORKSPACE/scripts/gofmtcheck.sh

      - name: Linting
        if: matrix.os == 'linux'
        run: |
          go install golang.org/x/lint/golint@latest
          golint .

      - name: Get short commit hash and date
        id: get_git_info
        run: echo ::set-output name=HASH_DATE::$(git log -1 --pretty=format:"%h (%ci)" .)

      - name: Build
        run: |
          mkdir -p dist/${GOOS}-${GOARCH}
          go build -v -ldflags "-X \"main.buildVersion=${{ steps.get_git_info.outputs.HASH_DATE }}\"" -o dist/${GOOS}-${GOARCH}/ .

      - name: Test
        if: matrix.os == 'linux'
        run: go test -v .

      # - name: Build and Push if on master
      #   if: matrix.os == 'linux' && env.DOCKER_USERNAME != ''
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: dbhi/prometheus-sql
      #     tag_with_sha: true
      #     tag_with_ref: true
      #     add_git_labels: true
      #     dockerfile: Dockerfile.github
      #     push: ${{ endsWith(github.ref, '/master') }}
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}